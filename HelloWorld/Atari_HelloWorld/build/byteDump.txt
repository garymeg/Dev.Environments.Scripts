Sections:
00: "org0001:a000" (A000-A0F5)
01: "org0002:bffd" (BFFD-C000)


Source: "Hello2.vasm"
                        	     1:     org $A000
                        	     2: screen_mem equ $1800
                        	     3: start
00:A000 A900            	     4:     lda #0
00:A002 8D0ED4          	     5:     sta $d40e
00:A005 8D00D4          	     6:     sta $d400
                        	     7: 
00:A008 A960            	     8:     lda #<vbl_irq
00:A00A 8D2202          	     9:     sta $222
00:A00D A9A0            	    10:     lda #>vbl_irq
00:A00F 8D2302          	    11:     sta $223
                        	    12: 
00:A012 A9B1            	    13:     lda #<disp_list
00:A014 8D02D4          	    14:     sta $d402
00:A017 A9A0            	    15:     lda #>disp_list
00:A019 8D03D4          	    16:     sta $d403
                        	    17: 
00:A01C A900            	    18:     lda #<screen_mem
00:A01E 85B0            	    19:     sta $b0
00:A020 A918            	    20:     lda #>screen_mem
00:A022 85B1            	    21:     sta $b1
00:A024 A90A            	    22:     lda #10
00:A026 207BA0          	    23:     jsr copy_1bit_gfx
                        	    24: 
00:A029 A946            	    25:     lda #<(screen_mem+10*7)
00:A02B 85B0            	    26:     sta $b0
00:A02D A918            	    27:     lda #>(screen_mem+10*7)
00:A02F 85B1            	    28:     sta $b1
00:A031 A914            	    29:     lda #20
00:A033 207BA0          	    30:     jsr copy_1bit_gfx
                        	    31: 
                        	    32: 
00:A036 A9D2            	    33:     lda #<(screen_mem+10*7 + 20*7)
00:A038 85B0            	    34:     sta $b0
00:A03A A918            	    35:     lda #>(screen_mem+10*7 + 20*7)
00:A03C 85B1            	    36:     sta $b1
00:A03E A928            	    37:     lda #40
00:A040 207BA0          	    38:     jsr copy_1bit_gfx
                        	    39: 
00:A043 A90E            	    40:     lda #$0e
00:A045 8D16D0          	    41:     sta $d016
00:A048 8D17D0          	    42:     sta $d017
                        	    43:  
00:A04B A900            	    44:     lda #$0
00:A04D 8D18D0          	    45:     sta $d018
00:A050 8D1AD0          	    46:     sta $d01a
                        	    47: 
00:A053 A9C0            	    48:     lda #$c0
00:A055 8D0ED4          	    49:     sta $d40e
00:A058 A922            	    50:     lda #32+2
00:A05A 8D00D4          	    51:     sta $d400
                        	    52: 
                        	    53: loop
00:A05D 4C5DA0          	    54:     jmp loop
                        	    55: 
                        	    56: vbl_irq
00:A060 68              	    57:     pla
00:A061 A8              	    58:     tay
00:A062 68              	    59:     pla
00:A063 AA              	    60:     tax
00:A064 68              	    61:     pla
                        	    62:     
00:A065 A5B5            	    63:     lda $b5 
00:A067 6901            	    64:     adc #1
00:A069 85B5            	    65:     sta $b5
                        	    66: 
00:A06B A9D2            	    67:     lda #<(screen_mem+10*7 + 20*7)
00:A06D 85B0            	    68:     sta $b0
00:A06F A918            	    69:     lda #>(screen_mem+10*7 + 20*7)
00:A071 65B5            	    70:     adc $b5
00:A073 85B1            	    71:     sta $b1
00:A075 A928            	    72:     lda #40
00:A077 207BA0          	    73:     jsr copy_1bit_gfx
                        	    74: 
00:A07A 40              	    75:     rti
                        	    76: 
                        	    77: copy_1bit_gfx
00:A07B 85B4            	    78:     sta $b4
00:A07D A9D1            	    79:     lda #<hello_world_1col
00:A07F 85B2            	    80:     sta $b2
00:A081 A9A0            	    81:     lda #>hello_world_1col
00:A083 85B3            	    82:     sta $b3
00:A085 A206            	    83:     ldx #6
                        	    84: row_loop
00:A087 A005            	    85:     ldy #5
                        	    86: byte_loop
00:A089 B1B2            	    87:     lda ($b2),y
00:A08B 91B0            	    88:     sta ($b0),y
00:A08D 88              	    89:     dey
00:A08E 10F9            	    90:     bpl byte_loop
00:A090 CA              	    91:     dex
00:A091 F01D            	    92:     beq copy_done
                        	    93: 
00:A093 A5B4            	    94:     lda $b4
00:A095 18              	    95:     clc
00:A096 65B0            	    96:     adc $b0
00:A098 85B0            	    97:     sta $b0
00:A09A A900            	    98:     lda #0
00:A09C 65B1            	    99:     adc $b1
00:A09E 85B1            	   100:     sta $b1
                        	   101: 
00:A0A0 A906            	   102:     lda #6
00:A0A2 18              	   103:     clc 
00:A0A3 65B2            	   104:     adc $b2
00:A0A5 85B2            	   105:     sta $b2
00:A0A7 A900            	   106:     lda #0
00:A0A9 65B3            	   107:     adc $b3
00:A0AB 85B3            	   108:     sta $b3
00:A0AD 4C87A0          	   109:     jmp row_loop
                        	   110: copy_done
00:A0B0 60              	   111:     rts
                        	   112: 
                        	   113: disp_list
00:A0B1 70              	   114:     db $70,$70,$70,$70,$70,$70
00:A0B2 70
00:A0B3 70
00:A0B4 70
00:A0B5 70
00:A0B6 70
00:A0B7 49              	   115:     db $49
00:A0B8 0018            	   116:     dw screen_mem
00:A0BA 09              	   117:     db $9, $9, $9, $9, $9, $9
00:A0BB 09
00:A0BC 09
00:A0BD 09
00:A0BE 09
00:A0BF 09
00:A0C0 0B              	   118:     db $b, $b, $b, $b, $b, $b, $b
00:A0C1 0B
00:A0C2 0B
00:A0C3 0B
00:A0C4 0B
00:A0C5 0B
00:A0C6 0B
00:A0C7 0F              	   119:     db $f, $f, $f, $f, $f, $f, $f
00:A0C8 0F
00:A0C9 0F
00:A0CA 0F
00:A0CB 0F
00:A0CC 0F
00:A0CD 0F
00:A0CE 41              	   120:     db $41
00:A0CF B1A0            	   121:     dw disp_list
                        	   122: 
                        	   123: hello_world_1col
                        	   124:     ;db    %01000100,%00000101,%00000001,%00010000,%00000001,%00001010
00:A0D1 44              	   125:     db    %01000100,%00000101,%00000001,%00010000,%00000001,%00001010
00:A0D2 05
00:A0D3 01
00:A0D4 10
00:A0D5 01
00:A0D6 0A
00:A0D7 44              	   126:     db    %01000100,%11100101,%00110001,%00010011,%00011001,%00111010
00:A0D8 E5
00:A0D9 31
00:A0DA 13
00:A0DB 19
00:A0DC 3A
00:A0DD 45              	   127:     db    %01000101,%00010101,%01001001,%00010100,%10100101,%01001010
00:A0DE 15
00:A0DF 49
00:A0E0 14
00:A0E1 A5
00:A0E2 4A
00:A0E3 7D              	   128:     db    %01111101,%11110101,%01001001,%01010100,%10100001,%01001010
00:A0E4 F5
00:A0E5 49
00:A0E6 54
00:A0E7 A1
00:A0E8 4A
00:A0E9 45              	   129:     db    %01000101,%00000101,%01001001,%01010100,%10100001,%01001000
00:A0EA 05
00:A0EB 49
00:A0EC 54
00:A0ED A1
00:A0EE 48
00:A0EF 44              	   130:     db    %01000100,%11110101,%00110000,%10100011,%00100001,%00111010
00:A0F0 F5
00:A0F1 30
00:A0F2 A3
00:A0F3 21
00:A0F4 3A
                        	   131: 
                        	   132: ;	Rom Header
                        	   133:         org $bffd
01:BFFD FF              	   134:         db $FF         ;Disable Atari Logo
01:BFFE 00A0            	   135:         dw start;program Start


Symbols by name:
byte_loop                        A:A089
copy_1bit_gfx                    A:A07B
copy_done                        A:A0B0
disp_list                        A:A0B1
hello_world_1col                 A:A0D1
loop                             A:A05D
row_loop                         A:A087
screen_mem                       E:1800
start                            A:A000
vbl_irq                          A:A060

Symbols by value:
1800 screen_mem
A000 start
A05D loop
A060 vbl_irq
A07B copy_1bit_gfx
A087 row_loop
A089 byte_loop
A0B0 copy_done
A0B1 disp_list
A0D1 hello_world_1col
